#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.13
# In conjunction with Tcl version 8.6
#    Jun 06, 2018 03:20:41 AM


import sys
from tkinter import messagebox

from firebase import  firebase

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


    def dautogen_id():
        fire = firebase.FirebaseApplication("https://merchant-1995r.firebaseio.com/merchant/employee/dispatcher",None)
        result = fire.get("dispatcher", None)
        idno = ""
        if result == None:
            idno = "1000"
        else:
            for x in result:
                pass
            id = int(x)
            id = id + 1
            idno = str(id)

        return idno


def delete_dispatcher():
    idno = w.Dispatcher_id.get()
    if idno == "":
         messagebox.showerror("View", "Enter Idno")
    else:
        ans = messagebox.askyesno("Dispatcher Delete", "Are You Sure")
        if ans:
            fire = firebase.FirebaseApplication("https://merchant-1995r.firebaseio.com/merchant/employee/dispatcher", None)
            fire.delete("dispatcher", idno)
            messagebox.showinfo("Delete confirmation","Record Deleted")
            destroy_window()


def save_dispatcher():
   # print('DispatcherRegistration_support.save_dispatcher')
   # sys.stdout.flush()
    idno = dautogen_id()
    name = w.Dispatcher_username.get()
    cno = w.Dispatcher_phone.get()
    password = w.Dispatcher_password.get()

    if name == "":
        messagebox.showerror("Registration", "Enter Name")
    elif cno == "":
        messagebox.showerror("Registration", "Enter Phone No")
    elif password == "":
        messagebox.showerror("Registration", "Enter Password")
    else:
        fire = firebase.FirebaseApplication("https://merchant-1995r.firebaseio.com/merchant/employee/dispatcher",None)
        fire.put("dispatcher", idno, {"name": name, "phone": cno, "password": password})
        messagebox.showinfo("Registration", "Saved")
        destroy_window()

def view_dispatcher():
    #print('DispatcherRegistration_support.view_dispatcher')
   # sys.stdout.flush()
    idno = w.Dispatcher_id.get()
    if idno == "":
        messagebox.showerror("View", "Enter Idno")
    else:
        fire = firebase.FirebaseApplication("https://merchant-1995r.firebaseio.com/merchant/employee/dispatcher",None)
        result = fire.get("dispatcher", idno)
        if result == None:
            messagebox.showerror("View", "Invalid Idno")
            w.view_stocker_id.delete(0, "end")
        else:
            name = result["name"]
            pno = result["phone"]
            w.Label8.configure(text=pno)
            w.Label7.configure(text=name)


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import DispatcherRegistration
    DispatcherRegistration.vp_start_gui()


